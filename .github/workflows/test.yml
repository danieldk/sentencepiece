name: "Unit tests"

on: [push, pull_request]

jobs:
  without-sentencepiece:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-13
          - macos-latest
        toolchain:
          - stable
        target-features:
          - "+crt-static"
          - "-crt-static"
    name: Test without libsentencepiece
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - run: rustup override set ${{ matrix.toolchain }}
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-${{ matrix.toolchain }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ matrix.target-features }}
      - run: cargo test
      - name: Run tests (macOS, Intel)
        if: matrix.os == 'macos-13'
        env:
          RUSTFLAGS: "-Ctarget-feature=${{ matrix.target-features }}"
        run: scripts/test-all.sh --target x86_64-apple-darwin
      - name: Run tests (macOS, Apple silicon)
        if: matrix.os == 'macos-latest'
        env:
          RUSTFLAGS: "-Ctarget-feature=${{ matrix.target-features }}"
        run: scripts/test-all.sh --target aarch64-apple-darwin
      - name: Run tests (Ubuntu)
        if: matrix.os == 'ubuntu-latest' && matrix.target-features != '+crt-static'
        env:
          RUSTFLAGS: "-Ctarget-feature=${{ matrix.target-features }}"
        run: scripts/test-all.sh --target x86_64-unknown-linux-gnu
      - name: Run tests (Windows)
        env:
          RUSTFLAGS: "-Ctarget-feature=${{ matrix.target-features }}"
        if: matrix.os == 'windows-latest'
        run: scripts/test-all.ps1 --target x86_64-pc-windows-msvc
